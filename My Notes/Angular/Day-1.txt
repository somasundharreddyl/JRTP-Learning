1.Story of Amazon.
2.Started with Booking Selling.
3.Later sell Books with Postal Service
4.Build First Website.
USPS ==> Postal Service ==> Running the business through IT With in 4 months of time frame ==> achieved target ==> problem Arises(Latency)
5. one Fine day, Website users getting started low latency(buffering images).

If 100+ customers browse application at the same time (in 5 mts) ==> Only 50 to 60 persons are getting the web page.


To reduce the burden on the server ==> Client side framework is created ==> Code written by developer will be exeucted on client browser itself ==> Amazon Developer ==> Amazon Data Center Vijay ==> www.amazon.com/cart ==> cart.js file which is created.

Before JavaScript is Introduced in Frontend, Tomcat Server convert Backend data into DOM Format and then in the frontend Browser Validates the DOM format is Correct or not. It is Time consuming Process.

Some of the server side functionalities shifted to client side(Diagram-1)
1) Validation of the page ==> DOB, qty, address ==> Validate date, Valid qty, Valid Address
2) DOM Tree Creation(HTML Format(Body,Head)) ==> Web Page Creation ==> Dynamic HTML from JS
3) Business logic ==> Taking inputs from web page and giving the data to server ==> Rendering the data to web page after response from Server

After Javascript ==> JQuery ==> Angular JS 


6.How He Solved latency issue?

- Amazon Introduced JavaScript in Frontend.

Why JQuery ==> Why this is evolved

Why Angular JS ==> Jquery vs Angular JS ==> Programmatic Approach

Why AJAX ==> Why Ajax is so poular

Why Angular/SPA

JQuery vs Javascript

When we have large data set i.e. 50 MB of data coming from Service Layer ==> This should be binded to HTML ==> If we use Javascript for designing the page ==> Performance is very low Animations are not supported by Javascript.There Introduced Advanced Javascript in the form of Jquery.

Problems observed using Jquery: JQuery typically Event Driven Architecture

For every page main events are: Click, Change, Load

A webpage contains more than 300 controls ==> Jquery is not best option ==> Its event driven architecture and complete page will be loaded with heavy events and performance will impact.



Problems observed using Jquery: JQuery typically Event Driven Architecture

For every page main events are: Click(), Change(), Load

A webpage contains more than 300 controls ==> Jquery is not best option ==> Its event driven architecture and complete page will be loaded with heavy events and performance will impact

Angular JS ==> Introduced to minimize the event driven format with JQuery

Limitations of Angular JS ==>

1) Communications between pages ==> Developer need to write lot of code.

Order Page, Product Page, Payment Page, Cart page, Discount page In my Cart 10 Products ==> 9500.00 ==>

If i add new product with more than 500.00 rs value ==> 20% of instance discount

A change in cart ==> Should automatically trigger discount page ==> Change in Discount page ==> Payment Page ==> Customer should see on the fly

2) Data binding ==> HTML to Business Logic and Business Logic to HTML ==> Developer should write lot of boiler plate code.